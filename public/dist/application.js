"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularPayments","internationalPhoneNumber"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","Users","$window",function($scope,Authentication,Users,$window){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.addingJob=!1;var createPhoneAndCardDisplays=function(){if(Authentication.user.cards)for(var i=0;i<$scope.authentication.user.cards.length;i++)$scope.authentication.user.cards[i].lastFour=Authentication.user.cards[i].number.substr($scope.user.cards[i].number.length-4);if(console.log(Authentication.user.phones),Authentication.user.phones)for(var p=0;p<Authentication.user.phones.length;p++){var firstThree=Authentication.user.phones[p].number.substr(0,3),secondThree=Authentication.user.phones[p].number.substr(3,3),lastGuys=Authentication.user.phones[p].number.substr(6,4);$scope.authentication.user.phones[p].displayNumber="("+firstThree+") "+secondThree+"-"+lastGuys}};Authentication.user&&createPhoneAndCardDisplays(),$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.editing=!1,$scope.success=!0,$scope.user=response,$scope.addingJob=!1,$scope.addingPhone=!1,$scope.addingCard=!1,$scope.addingAddress=!1,Authentication.user=response,createPhoneAndCardDisplays()},function(response){$scope.error=response.data.message})},$scope.cancelEdit=function(){$scope.editing=!1,$scope.user=$scope.oldUserObj,$scope.authentication.user=$scope.oldUserObj},$scope.startEditing=function(){$scope.oldUserObj=new Users($scope.user),$scope.oldAuth=new Object($scope.authentication),$scope.editing=!0},$scope.changePhoto=function(){var photo=prompt("Paste your photo url here. Tip: square photos fit best!");null!==photo&&""!==photo&&($scope.user.avatar=photo,$scope.updateUserProfile())},$scope.changeCover=function(){var photo=prompt("Paste your photo url here. Tip: photos around 4x3 fit best!");null!==photo&&""!==photo&&($scope.user.coverPhoto=photo,$scope.updateUserProfile())},$scope.addJob=function(){$scope.addingJob=!0,$scope.job={},$scope.company="company",$scope.duration="Jan 2015 - Current",$scope.role="role"},$scope.notAddingJob=function(){$scope.addingJob=!1},$scope.saveJob=function(job){$scope.user.jobs.push(job),$scope.updateUserProfile(),$scope.job={}},$scope.removeJob=function(){var index=$scope.user.jobs.indexOf(this.job);index>-1&&$scope.user.jobs.splice(index,1),$scope.updateUserProfile()},$scope.addAnAddress=function(){$scope.addingAddress=!0},$scope.cancelAddressAdd=function(){$scope.addingAddress=!1},$scope.saveAddress=function(address){$scope.user.addresses.push(address),$scope.updateUserProfile()},$scope.removeAddress=function(){var index=$scope.user.addresses.indexOf(this.address);index>-1&&$scope.user.addresses.splice(index,1),$scope.updateUserProfile()},$scope.addACard=function(){$scope.addingCard=!0},$scope.cancelCardAdd=function(){$scope.addingCard=!1},$scope.saveCard=function(card){$scope.user.cards.push(card),$scope.updateUserProfile()},$scope.removeCard=function(){var index=$scope.user.cards.indexOf(this.card);index>-1&&$scope.user.cards.splice(index,1),$scope.updateUserProfile()},$scope.addAPhone=function(){$scope.addingPhone=!0},$scope.cancelPhoneAdd=function(){$scope.addingPhone=!1},$scope.savePhone=function(phone){console.log(phone),$scope.user.phones.push(phone),console.log($scope.user),$scope.updateUserProfile()},$scope.removePhone=function(){var index=$scope.user.phones.indexOf(this.phone);index>-1&&$scope.user.phones.splice(index,1),$scope.updateUserProfile()},$scope.beginSignIn=function(){$scope.signingIn=!0}}]),angular.module("core").directive("contenteditable",function(){return{restrict:"EA",require:"ngModel",link:function(scope,element,attrs,ngModel){function read(){ngModel.$setViewValue(element.html())}ngModel.$render=function(){element.html(ngModel.$viewValue||"")},element.bind("blur keyup change",function(){scope.$apply(read)})}}}),angular.module("core").filter("validate",[function(){return function(ccnumber){if(!ccnumber)return"";ccnumber=ccnumber.toString().replace(/\s+/g,"");for(var cardType,valid,len=ccnumber.length,mul=0,prodArr=[[0,1,2,3,4,5,6,7,8,9],[0,2,4,6,8,1,3,5,7,9]],sum=0;len--;)sum+=prodArr[mul][parseInt(ccnumber.charAt(len),10)],mul^=1;return valid=sum%10===0&&sum>0?"valid":"not valid",/^(34)|^(37)/.test(ccnumber)&&(cardType="American Express"),/^(62)|^(88)/.test(ccnumber)&&(cardType="China UnionPay"),/^30[0-5]/.test(ccnumber)&&(cardType="Diners Club Carte Blanche"),/^(2014)|^(2149)/.test(ccnumber)&&(cardType="Diners Club enRoute"),/^36/.test(ccnumber)&&(cardType="Diners Club International"),/^(6011)|^(622(1(2[6-9]|[3-9][0-9])|[2-8][0-9]{2}|9([01][0-9]|2[0-5])))|^(64[4-9])|^65/.test(ccnumber)&&(cardType="Discover Card"),/^35(2[89]|[3-8][0-9])/.test(ccnumber)&&(cardType="JCB"),/^(6304)|^(6706)|^(6771)|^(6709)/.test(ccnumber)&&(cardType="Laser"),/^(5018)|^(5020)|^(5038)|^(5893)|^(6304)|^(6759)|^(6761)|^(6762)|^(6763)|^(0604)/.test(ccnumber)&&(cardType="Maestro"),/^5[1-5]/.test(ccnumber)&&(cardType="MasterCard"),/^4/.test(ccnumber)&&(cardType="Visa"),/^(4026)|^(417500)|^(4405)|^(4508)|^(4844)|^(4913)|^(4917)/.test(ccnumber)&&(cardType="Visa Electron"),cardType}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").directive("phoneFormat",function(){return{restrict:"EA",link:function(scope,element,attr){element.bind("load",function(){if(10===this.value.length){var number=this.value;this.value="("+number.substring(0,3)+") "+number.substring(3,6)+"-"+number.substring(6,10)}else document.querySelector(".helpblock").innerHTML="error in formatting"})}}}),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){console.log($scope.user),$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);